# -*- coding: utf-8 -*-
"""Prediction Using Decision Tree Algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_8ZPNtaAe-WDUq2iwLSs-fuSWqHN4V8t

Import required libraries
"""

from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier, export_graphviz
import graphviz
from IPython.display import IFrame

"""Dataset"""

# Load Iris dataset
iris = load_iris()

"""Construct Decision Tree"""

# Create a decision tree classifier
dt = DecisionTreeClassifier()

# Train the classifier
dt.fit(iris.data, iris.target)

"""Visualization"""

# Visualize the decision tree graphically
dot_data = export_graphviz(dt, out_file=None, 
                           feature_names=iris.feature_names,  
                           class_names=iris.target_names,  
                           filled=True, rounded=True,  
                           special_characters=True)  
graph = graphviz.Source(dot_data)  
graph.render("iris_decision_tree")

"""Prediction"""

# User input for classifier
sepal_length = float(input("Enter sepal length: "))
sepal_width = float(input("Enter sepal width: "))
petal_length = float(input("Enter petal length: "))
petal_width = float(input("Enter petal width: "))

new_sample = [[sepal_length, sepal_width, petal_length, petal_width]]
prediction = dt.predict(new_sample)

# Result
print("Predicted class: ", iris.target_names[prediction[0]])